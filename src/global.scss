@use '@angular/material' as mat;
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming


html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}

// Import Material Icons
@import url('https://fonts.googleapis.com/icon?family=Material+Icons');
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');



html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  color-scheme: light;
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);
  margin: 0;
}

/* =========================== COMPLETE GLOBAL STYLES =========================== */

// Variables
$primary-color: #3b82f6;
$primary-dark: #2563eb;
$primary-light: #60a5fa;
$secondary-color: #667eea;
$secondary-dark: #764ba2;

$success-color: #10b981;
$success-dark: #059669;
$success-light: #34d399;
$error-color: #ef4444;
$error-dark: #dc2626;
$warning-color: #f59e0b;
$info-color: #06b6d4;

$text-primary: #1f2937;
$text-secondary: #374151;
$text-tertiary: #6b7280;
$text-light: #9ca3af;
$text-muted: #d1d5db;

$border-color: #e5e7eb;
$border-light: #f3f4f6;
$border-dark: #d1d5db;

$background-primary: #ffffff;
$background-secondary: #f8fafc;
$background-tertiary: #f1f5f9;
$background-light: #f8fafc;

$white: #ffffff;
$gray-50: #f8fafc;
$gray-100: #f1f5f9;
$gray-200: #e2e8f0;
$gray-300: #cbd5e1;
$gray-400: #94a3b8;
$gray-500: #64748b;
$gray-600: #475569;
$gray-700: #334155;
$gray-800: #1e293b;
$gray-900: #0f172a;

$font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;

$border-radius-sm: 0.125rem;
$border-radius: 0.25rem;
$border-radius-lg: 0.5rem;
$border-radius-xl: 0.75rem;
$border-radius-2xl: 1rem;

$shadow-sm: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
$shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
$shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
$shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);

$transition-fast: all 150ms ease-in-out;
$transition-normal: all 250ms ease-in-out;
$transition-slow: all 350ms ease-in-out;

/* Material Icons Base Styles */
.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  height: 100%;
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
}

body {
  height: 100%;
  margin: 0;
  font-family: $font-family;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: $text-primary;
  background-color: $background-primary;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  margin: 0;
}

button {
  background: transparent;
  border: none;
  cursor: pointer;
  padding: 0;

  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }
}

ul,
ol {
  list-style: none;
}

a {
  color: inherit;
  text-decoration: none;

  &:hover {
    text-decoration: underline;
  }
}

img {
  max-width: 100%;
  height: auto;
  border-style: none;
}

::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: $gray-100;
}

::-webkit-scrollbar-thumb {
  background: $gray-400;
  border-radius: $border-radius;

  &:hover {
    background: $gray-500;
  }
}

*:focus {
  outline: 2px solid $primary-color;
  outline-offset: 2px;

  &:not(:focus-visible) {
    outline: none;
  }
}

::selection {
  background-color: $primary-light;
  color: $white;
}

::-moz-selection {
  background-color: $primary-light;
  color: $white;
}

.container {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1rem;

  @media (min-width: 768px) {
    padding: 0 2rem;
  }
}

.text-center { text-align: center; }
.text-left { text-align: left; }
.text-right { text-align: right; }

.text-primary { color: $text-primary; }
.text-secondary { color: $text-secondary; }
.text-tertiary { color: $text-tertiary; }
.text-muted { color: $text-muted; }
.text-success { color: $success-color; }
.text-error { color: $error-color; }
.text-warning { color: $warning-color; }
.text-info { color: $info-color; }
.d-flex { display: flex; }
.d-block { display: block; }
.d-none { display: none; }
.d-inline-block { display: inline-block; }

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

.flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.w-100 { width: 100%; }
.h-100 { height: 100%; }
.mb-0 { margin-bottom: 0; }
.mb-1 { margin-bottom: 0.25rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-3 { margin-bottom: 0.75rem; }
.mb-4 { margin-bottom: 1rem; }
.mb-5 { margin-bottom: 1.25rem; }

.mt-0 { margin-top: 0; }
.mt-1 { margin-top: 0.25rem; }
.mt-2 { margin-top: 0.5rem; }
.mt-3 { margin-top: 0.75rem; }
.mt-4 { margin-top: 1rem; }
.mt-5 { margin-top: 1.25rem; }

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border: none;
  border-radius: $border-radius-lg;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: $transition-fast;
  text-decoration: none;
  white-space: nowrap;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none !important;
  }

  &:not(:disabled):hover {
    transform: translateY(-2px);
  }

  &:not(:disabled):active {
    transform: translateY(0);
  }
}

.btn-primary {
  background: linear-gradient(135deg, $primary-color, $primary-dark);
  color: $white;
  box-shadow: 0 4px 6px -1px rgba(59, 130, 246, 0.3);

  &:hover:not(:disabled) {
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4);
  }
}

.btn-outline {
  background: transparent;
  color: $primary-color;
  border: 2px solid $primary-color;

  &:hover:not(:disabled) {
    background: $primary-color;
    color: $white;
  }
}

.btn-success {
  background: $success-color;
  color: $white;

  &:hover:not(:disabled) {
    background: $success-dark;
  }
}

.btn-error {
  background: $error-color;
  color: $white;

  &:hover:not(:disabled) {
    background: $error-dark;
  }
}

.card {
  background: $white;
  border-radius: $border-radius-xl;
  box-shadow: $shadow-md;
  padding: 1.5rem;
  transition: $transition-normal;

  &:hover {
    box-shadow: $shadow-lg;
    transform: translateY(-2px);
  }
}

.form-field {
  display: flex;
  flex-direction: column;
  margin-bottom: 1.5rem;
  
  label {
    font-weight: 600;
    color: $text-secondary;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
  }
  
  input,
  select,
  textarea {
    width: 100%;
    padding: 0.875rem 1rem;
    border: 2px solid $border-color;
    border-radius: $border-radius-lg;
    font-size: 1rem;
    font-family: inherit;
    background: $white;
    transition: $transition-fast;
    box-sizing: border-box;
    
    &:focus {
      outline: none;
      border-color: $primary-color;
      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    }
    
    &:hover:not(:focus) {
      border-color: $border-dark;
    }
    
    &::placeholder {
      color: $text-light;
    }
    
    &:disabled {
      background: $gray-50;
      border-color: $border-light;
      color: $text-tertiary;
      cursor: not-allowed;
    }
  }
  
  textarea {
    min-height: 100px;
    resize: vertical;
  }
  
  select {
    cursor: pointer;
    appearance: none;
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%236b7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6,9 12,15 18,9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 1rem;
    padding-right: 2.5rem;
  }
}

.error-message {
  color: $error-color;
  font-size: 0.75rem;
  margin-top: 0.25rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.25rem;
  
  &::before {
    content: '⚠';
    font-size: 0.8rem;
  }
}

.alert {
  padding: 0.875rem 1rem;
  border-radius: $border-radius-lg;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-weight: 500;
}

.alert-success {
  background: $success-color;
  color: $white;
  
  &::before {
    content: '✓';
    font-size: 1rem;
  }
}

.alert-error {
  background: $error-color;
  color: $white;
  
  &::before {
    content: '⚠';
    font-size: 1rem;
  }
}

.alert-warning {
  background: $warning-color;
  color: $white;
  
  &::before {
    content: '⚠';
    font-size: 1rem;
  }
}

.alert-info {
  background: $info-color;
  color: $white;
  
  &::before {
    content: 'ℹ';
    font-size: 1rem;
  }
}

.spinner {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  border: 2px solid rgba($primary-color, 0.3);
  border-radius: 50%;
  border-top-color: $primary-color;
  animation: spin 1s ease-in-out infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

@media (max-width: 768px) {
  .container {
    padding: 0 1rem;
  }
  
  .btn {
    width: 100%;
    justify-content: center;
  }
  
  .form-field {
    margin-bottom: 1.25rem;
  }
}

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

::ng-deep {
  .mat-form-field {
    font-family: inherit !important;
  }
  
  .mat-button,
  .mat-raised-button,
  .mat-flat-button {
    border-radius: $border-radius-lg !important;
    font-family: inherit !important;
  }
  
  .mat-dialog-container {
    border-radius: $border-radius-xl !important;
  }
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
